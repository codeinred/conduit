name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    name: ${{ matrix.name }}
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow#configuring-a-build-matrix
    runs-on: ubuntu-latest

    strategy:
      matrix:
        name: [
          ubuntu-latest-gcc-10-debug,
          ubuntu-latest-clang-10-debug,
          ubuntu-latest-gcc-10-release,
          ubuntu-latest-clang-10-release
        ]

        include:
          - name: ubuntu-latest-gcc-10-debug
            compiler: g++-10
            build_type: Debug
            install-compiler: sudo apt install g++-10
        
          - name: ubuntu-latest-clang-10-debug
            compiler: clang++-10
            build_type: Debug
            install-compiler: sudo apt install g++-10 && sudo apt install clang-10

          - name: ubuntu-latest-gcc-10-release
            compiler: g++-10
            build_type: Release
            install-compiler: sudo apt install g++-10
        
          - name: ubuntu-latest-clang-10-release
            compiler: clang++-10
            build_type: Release
            install-compiler: sudo apt install g++-10 && sudo apt install clang-10

    steps:
    - uses: actions/checkout@v2
    
    - name: Configure Build Environment
      shell: bash
      run: ${{ matrix.install-compiler }}

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_CXX_COMPILER=${{ matrix.compiler }}

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{ matrix.build_type }}
